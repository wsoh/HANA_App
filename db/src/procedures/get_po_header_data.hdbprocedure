PROCEDURE "get_po_header_data"( 
	OUT EX_TOP_3_EMP_PO_COMBINED_CNT TABLE (
		LOGINNAME NVARCHAR(12),
		CREATE_CNT INTEGER,
		CHANGE_CNT INTEGER,
		COMBINED_CNT INTEGER))
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   READS SQL DATA AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
PO_CREATE_CNT = 
	SELECT COUNT(*) AS CREATE_CNT, "HISTORY.CREATEDBY.EMPLOYEEID" AS EID
    FROM "PO.Header" WHERE PURCHASEORDERID IN (
                     SELECT PURCHASEORDERID
                          FROM "PO.Item"
          WHERE "PRODUCT.PRODUCTID" IS NOT NULL)
	GROUP BY  "HISTORY.CREATEDBY.EMPLOYEEID";

PO_CHANGE_CNT = 
	SELECT COUNT(*) AS CHANGE_CNT, "HISTORY.CHANGEDBY.EMPLOYEEID" AS EID
    FROM "PO.Header"  WHERE PURCHASEORDERID IN (
                     SELECT PURCHASEORDERID
                          FROM "PO.Item"
          WHERE "PRODUCT.PRODUCTID" IS NOT NULL)
	GROUP BY  "HISTORY.CHANGEDBY.EMPLOYEEID";

EX_TOP_3_EMP_PO_COMBINED_CNT = 
	SELECT EMP.LOGINNAME, CRCNT.CREATE_CNT, ChCNT.CHANGE_CNT, 
		CRCNT.CREATE_CNT + ChCNT.CHANGE_CNT as combined_cnt
    FROM "MD.Employees" as emp
    	left outer join :PO_CREATE_CNT AS CRCNT
    	on emp.employeeid = crcnt.EID
    	left outer join :PO_CHANGE_CNT AS ChCNT
    	on emp.employeeid = chcnt.EID
    order by combined_cnt desc limit 3;
   
END
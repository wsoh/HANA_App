FUNCTION "get_po_counts"( im_fdate DATE )
       RETURNS TABLE (EMPLOYEEID NVARCHAR(10),
	       FULLNAME NVARCHAR(256),
	       CREATE_CNT INTEGER,
	       CHANGE_CNT INTEGER,
	       COMBINED_CNT INTEGER)
       LANGUAGE SQLSCRIPT 
       SQL SECURITY INVOKER AS 
BEGIN 
    /*****************************
        Write your function logic
    ****************************/
PO_CREATE_CNT = 
	SELECT COUNT(*) AS CREATE_CNT, "HISTORY.CREATEDBY.EMPLOYEEID" AS EID
    FROM "PO.Header" WHERE PURCHASEORDERID IN (
                     SELECT PURCHASEORDERID
                          FROM "PO.Item"
          WHERE "PRODUCT.PRODUCTID" IS NOT NULL)
		AND MONTH("HISTORY.CREATEDAT") = MONTH(:im_fdate)       	
	GROUP BY  "HISTORY.CREATEDBY.EMPLOYEEID";

PO_CHANGE_CNT = 
	SELECT COUNT(*) AS CHANGE_CNT, "HISTORY.CHANGEDBY.EMPLOYEEID" AS EID
    FROM "PO.Header"  WHERE PURCHASEORDERID IN (
                     SELECT PURCHASEORDERID
                          FROM "PO.Item"
          WHERE "PRODUCT.PRODUCTID" IS NOT NULL)
		AND MONTH("HISTORY.CHANGEDAT") = MONTH(:im_fdate)       	
	GROUP BY  "HISTORY.CHANGEDBY.EMPLOYEEID";

EMP_PO_COMBINED_CNT = 
	SELECT EMPLOYEEID, "get_full_name"("NAME.FIRST", "NAME.MIDDLE", "NAME.LAST") as fullname,
		CRCNT.CREATE_CNT, ChCNT.CHANGE_CNT, 
		CRCNT.CREATE_CNT + ChCNT.CHANGE_CNT as combined_cnt
    FROM "MD.Employees" as emp
    	left outer join :PO_CREATE_CNT AS CRCNT
    	on emp.employeeid = crcnt.EID
    	left outer join :PO_CHANGE_CNT AS ChCNT
    	on emp.employeeid = chcnt.EID
    order by combined_cnt desc;
      
	RETURN SELECT * FROM :EMP_PO_COMBINED_CNT;
	
END;